@mixin query-editor-proto-component-base() {

    $default-padding: map-get($widgets-common-config, default-padding);
    $edit-padding: map-get($widgets-common-config, edit-padding);

    $row-size: 40px;

    $filter-block-padding: 8px;

    .query-editor-proto {
        display: flex;
        flex-direction: column;
        width: 100%;

        .namespace-bar.mat-toolbar {
            height: $row-size;
            min-height: $row-size;
            padding: 0;
            align-items: stretch; // mat-toolbar already has display: flex;

            .toolbar-item {
                display: flex;
                
                &:not(:first-child) {
                    padding-right: 8px;
                }
            }

            .title {
                padding-left: 24px;
                text-transform: uppercase;
                font-weight: mat-font-weight(map-get($app-fontface-config, sans), display-4);
            }

            .namespace-value {
                font-weight: mat-font-weight(map-get($app-fontface-config, sans), body-2);
                font-size: mat-font-size(map-get($app-fontface-config, sans), subheading-2);
            }

            .query-index  {
                font-weight: mat-font-weight(map-get($app-fontface-config, sans), body-2);
                width: $row-size;
                height: $row-size;
            }

            .action-icons {
                .mat-icon-button {
                    width: 20px;
                    height: 20px;
                    line-height: 20px;
                }

                .mat-icon {
                    font-size: 16px;
                }
            }
        }

        .metric-wrapper {
            position: relative;

            .common-tag-wrapper {
                position: absolute;
                top: 0;
                bottom: 0;
                left: 300px;
                width: 300px;
                padding: 4px 8px;
            }

            ///*
            .inline-filter-editor {
                position: relative;
                left: 300px;
                width: 600px;
            }
            //*/
            

            .tags-selected {
                .tags-selected-header {
                    display: flex;
                    justify-content: flex-start;
                    align-items: center;
                    padding: 0 $filter-block-padding;
                    font-size: mat-font-size(map-get($app-fontface-config, sans), caption);
                    line-height: 24px;

                    // Only match selected tags label
                    .explicit-match {
                        padding-left: 8px;
                    }
                    .mat-checkbox-inner-container {
                        margin-right: 4px;
                    }
                }

                .tag-filter-rows {
                    padding: 0;
                }

                .tag {
                    display: flex;
                    width: initial;
                    height: initial;
                    min-height: 24px;
                    margin: 2px $filter-block-padding;
                    border-radius: 4px;
                    border: 0;
                    font-size: mat-font-size(map-get($app-fontface-config, sans), body-1);
                    
                    .mat-list-item-content {
                        padding: 0;
                        flex: 1;
                    }


                    .tag-filter-detail {
                        min-width: 0;
                        //max-width: 85%;
                        display: flex;
                        //flex-direction: column;
                        flex: 1;

                        strong {
                            margin-right: 6px;
                        }

                        span {
                            white-space: nowrap;
                            overflow: hidden;
                            text-overflow: ellipsis;
                        }
                    }
                }
            }
        }

        .metric-list-item {
            display: flex;
            flex-wrap: nowrap;
            align-items: center;
            min-height: 32px;

            .metric-row-data {
                height: inherit;
                padding-right: 16px;

                &:not(:first-child) {
                    padding-left: 16px;
                }

                &.metric-name {
                    width: 300px;

                    span {
                        max-width: 275px;
                        text-overflow: ellipsis;
                        display: inline-block;
                        overflow: hidden;
                    }
                }

                &.aggregator {
                    button {
                        line-height: 25px;
                    }
                    span {
                        margin-left: 5px;
                    }
                }

                &.tags {
                    width: 180px;
                }

                &.tag-spacer {
                    width: 300px;
                }
            }

            .add-function {
                margin-left: 8px;

                .mat-mini-fab {
                    @include mat-elevation(2);
                    width: 24px;
                    height: 24px;
                    display: flex;
                    align-items: center;
                    justify-content: center;

                    .mat-button-wrapper {
                        padding: 0;
                    }

                    .mat-icon {
                        width: 18px;
                        height: 18px;
                        font-size: 18px;
                        margin-left: -1px;
                        margin-top: -2px;;
                    }
                }
            }
        }

    }

    .mat-menu-panel.menu-form-wrapper {
        min-width: 600px;
        .mat-menu-content:not(:empty) {
            padding: 0px;
        }
    }

}

@mixin query-editor-proto-component-theme($theme-config) {

    /* Theme config parts */
    $primary: map-get($theme-config, primary);
    $accent: map-get($theme-config, accent);
    $warn: map-get($theme-config, warn);
    $foreground: map-get($theme-config, foreground);
    $background: map-get($theme-config, background);
    $is-dark: map-get($theme-config, is-dark);
    $chip-bg: rgba(map-get($primary, default), .1);
    $alias-bg: if($is-dark, rgba(255, 255, 255, .2), rgba(0, 0, 0, .2));
    $alias-text: if($is-dark, rgba(255, 255, 255, .5), rgba(0, 0, 0, .5));

    $widgets: map-get($theme-config, widgets);

    $card-background: map-get($background, card);
    $divider: map-get($foreground, divider);

    $query-marker-bg: map-get($widgets, query-editor-marker);
    $query-marker-text: map-get($widgets, query-editor-marker-text);
    $query-block-bg: map-get($widgets, query-editor-block-bg);
    $query-block-selected-border: map-get($widgets, query-editor-selected-border);

    .query-editor-proto {

        .namespace-bar.mat-toolbar {
            background-color: $query-block-bg;

            &.is-expanded {
                box-shadow: inset 0 -1px 0 1px map-get($background, card);
            }

            .query-index {
                color: $query-marker-text;
                background-color: $query-marker-bg;
            }
        }

        .metric-wrapper {
            .common-tag-wrapper {
                border: 1px solid $divider;
                background: $card-background;
            }
        }

        .metric-list-item {
            .metric-row-data {
                background-image: linear-gradient($card-background, $card-background 1px, $divider 1px, $divider);
                background-size: 100% 2px;
                background-repeat: no-repeat;
                background-position-y: center;

                span:first-child {
                    background: $card-background;
                    padding: 2px 4px;
                }
            }
        }

    }
}