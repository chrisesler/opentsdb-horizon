/** 
COMMON STYLES FOR WIDGET CONFIG PANELS
**/

// NOTE: These styles cover ALL of the widget config panels generic classes.
// TODO: Describe how this is setup & why there are two mixins (at a minimum)
@mixin widget-config-common-base() {

    $action-bar-height: 30px;
    $flex-gap: 10px;
  
    // ** Config tab CONTENT ** //
    .widget-config-tab {

        > form {
            flex: 1 1 100%;
            display: flex;
        }

        // possibly re-usable within a widget-config-tab
        .config-toolbar {
            height: auto;
            padding: 0;
    
            .mat-stroked-button,
            .mat-raised-button,
            .mat-button {
                font-size: 12px;
                line-height: 24px;
    
                .mat-icon {
                    width: 18px;
                    height: 18px;
                    line-height: 18px;
                    font-size: 16px;
                }
    
                &.has-icon {
                    padding-left: 8px;
                }
            }
        }

        // should be on an element that wraps a form element, like a <p> tag
        .config-control {
            &:not(:last-child) {
                margin-bottom: 30px;
            }
        }

        // columns
        &.has-columns {
            display: flex;
            padding: $flex-gap/2;

            .column {
                margin: $flex-gap/2;
                flex: 1 1 calc(100% - #{$flex-gap});
                // debugging
                //background-color: rgba(255,255,255,.15);
            }

            //.column:not(:last-child) {}

        }

        // specific tab overrides are in their own component style sheet
       
    }

    // CUSTOM ELEMENT STYLES

    // this hacks the material tab-nav-bar so it behaves somewhat like a button-group
    // but the ink-bar is now full height and slides underneath to the selected item
    // kind of a cooler button-group
    .sliding-button-group.mat-tab-nav-bar {
        border-bottom: 0 !important;
        padding: 0 2px;
        display: inline-block;

        .mat-tab-link {
            height: 32px;
            padding: 0 4px;
            min-width: 50px;
            opacity: 1;
            z-index: 1;
            background-color: transparent;

            &.mat-tab-label-active,
            &:not(.mat-tab-disabled):not(.mat-tab-label-active) {
                &,
                &:focus {
                    background-color: transparent !important;
                }
            }

            &:not(.mat-tab-disabled):focus {
                background-color: transparent !important;
            }
        }

        .mat-ink-bar {
            height: 28px;
            bottom: 2px;
            border-radius: 4px;
        }
    }
}

@mixin widget-config-common-theme($theme-config) {
    /* Theme config parts */
    $primary: map-get($theme-config, primary);
    $accent: map-get($theme-config, accent);
    $warn: map-get($theme-config, warn);
    $foreground: map-get($theme-config, foreground);
    $background: map-get($theme-config, background);
    $is-dark-theme: map-get($theme-config, is-dark);
    

    // ** Config tab CONTENT ** //
    .widget-config-tab {
    
        // possibly re-usable within a widget-config-tab
        .config-toolbar,
        .query-item-toolbar {
            background: transparent;
        }

        .query-item:not(:last-child) {
            border-bottom: 1px solid map-get($foreground, dividers);
        }

        // specific tab overrides are in their own component style sheet
    }

    // CUSTOM ELEMENT STYLES
    $fill-background: mat-color($foreground, base, if($is-dark-theme, 0.1, 0.04));

    .sliding-button-group.mat-tab-nav-bar {
        background-color: $fill-background;

        .mat-tab-link {
            color: map-get($primary, default);

            &.mat-tab-label-active {
                color: map-get($foreground, base);
            }
        }

        .mat-ink-bar {
            background-color: map-get($background, card);
        }
    }
}
